<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="delete-template.xml" />
	<munit:before-test name="delete-template-before-test" doc:id="751d6dbc-bef1-480c-80f3-e4aa57ccfb7a" >
		<munit-tools:mock-when doc:name="Exists Template in OS" doc:id="2e21c1c2-9c2a-4002-ab8f-e6b3750492f4" processor="os:contains">
			<munit-tools:with-attributes >
				<munit-tools:with-attribute whereValue="Exists Template in OS" attributeName="doc:name" />
			</munit-tools:with-attributes>
			<munit-tools:then-return >
				<munit-tools:payload value="#[true]" />
			</munit-tools:then-return>
		</munit-tools:mock-when>
		<munit-tools:mock-when doc:name="Remove Template" doc:id="8dade3c5-db27-446b-9d0c-c40ce76ff218" processor="os:remove">
			<munit-tools:with-attributes >
				<munit-tools:with-attribute whereValue="Remove Template" attributeName="doc:name" />
			</munit-tools:with-attributes>
		</munit-tools:mock-when>
	</munit:before-test>
	<munit:test name="delete-template-success-test" doc:id="d2a3f113-18ef-47cc-a15d-3b96c5843642" >
		<munit:execution >
			<flow-ref doc:name="Remove Template" doc:id="7a02239d-a252-4c35-867d-16ff2919b805" name="delete:\template\(name):main-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert Http Status" doc:id="992f3b39-5df7-4e55-997e-7ccc04b16bfd" >
				<munit-tools:that ><![CDATA[#[import * from dw::test::Asserts 
 ---
vars.httpStatus must equalTo(204)]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="delete-template-not-found-test" doc:id="a91825f2-b508-4b8a-9dbf-f3e6f5aebbbc" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Exists Template in OS" doc:id="1c74a153-b14a-4901-93fd-e03c83e21064" processor="os:contains">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Exists Template in OS" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[false]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Remove Template" doc:id="11f676dd-ccaf-43d9-82da-f639a917e2da" name="delete:\template\(name):main-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Valid Response" doc:id="2f6246aa-daa7-4d61-9675-3b5b270dd65a" >
				<munit-tools:that ><![CDATA[#[import * from dw::test::Asserts 
 ---
payload must equalTo(modules::DeleteTemplateTest::errorTemplateNotExists)]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="delete-template-error-os-test" doc:id="7b1fae9b-f5ad-4188-b513-eccc4e16ad6f" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Exists Template in OS" doc:id="7b94a3a1-f51d-4561-8ccf-66d7f66c41a8" processor="os:contains">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Exists Template in OS" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="OS:STORE_NOT_AVAILABLE" />
				</munit-tools:then-return>
			
		</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<try doc:name="Try" doc:id="33cb6428-b652-41f7-b52c-5bc78e2baf49" >
				<flow-ref doc:name="Remove Template" doc:id="74a3af0a-e64d-4bb7-b91f-1b3e4bfd774f" name="delete:\template\(name):main-config" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="e12531a7-2919-4463-a016-8a898bda7825" />
				</error-handler>
			</try>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Valid Error Response" doc:id="70c685ce-5f1a-457f-a81d-32673f4999c1" >
				<munit-tools:that ><![CDATA[#[import * from dw::test::Asserts 
 ---
payload must equalTo(modules::DeleteTemplateTest::errorOSTemplate)]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
